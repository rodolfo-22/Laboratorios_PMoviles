1. ¿Cuál es la principal ventaja de utilizar Recycler View?
A diferencia de ListView, RecyclerView solo dibuja y mantiene en memoria los elementos que se muestran actualmente en la pantalla y los que están a punto de aparecer.
Esto significa que si tienes una lista larga de elementos, RecyclerView solo cargará en memoria los elementos que son visibles en la pantalla en un momento dado, lo que reduce la cantidad de memoria utilizada por tu aplicación. Además, RecyclerView también ofrece una mayor flexibilidad en la forma en que los elementos se muestran en la pantalla y cómo interactúan con el usuario, lo que lo hace muy adecuado para implementar diseños de interfaces de usuario más complejos.




2. Menciona los componentes de RecyclerView y la función que tiene
cada uno de ellos
    1. LayoutManager: Es el encargado de manejar la disposición de los elementos en el RecyclerView. Hay varios tipos de LayoutManager disponibles, como LinearLayoutManager, GridLayoutManager y StaggeredGridLayoutManager, cada uno con diferentes formas de organizar los elementos.
    2. Adapter: Es responsable de proporcionar los datos que se mostrarán en el RecyclerView y de crear las vistas para cada elemento. El adaptador se comunica con el RecyclerView para crear y reciclar las vistas a medida que se desplazan por la pantalla.
    3. ViewHolder: Es una clase que representa una vista individual en el RecyclerView. El ViewHolder mantiene una referencia a los elementos de la vista y proporciona una forma eficiente de acceder a ellos para su posterior actualización.
    4. ItemDecoration: Es una clase que se utiliza para agregar decoraciones visuales a los elementos del RecyclerView, como márgenes, líneas divisorias, sombras, etc.
    5. ItemAnimator: Es una clase que se utiliza para agregar animaciones a los elementos del RecyclerView, como desvanecimientos, deslizamientos, giros, etc.
